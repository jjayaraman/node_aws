import type { AWS } from '@serverless/typescript';

import hello from '@functions/hello';

const serverlessConfiguration: AWS = {
  service: 'hello-layer',
  frameworkVersion: '3',
  plugins: ['serverless-esbuild'],
  provider: {
    name: 'aws',
    runtime: 'nodejs14.x',
    stage: 'dev',
    region: 'eu-west-2',
    logRetentionInDays: 1,
    apiGateway: {
      minimumCompressionSize: 1024,
      shouldStartNameWithService: true,
    },
    environment: {
      AWS_NODEJS_CONNECTION_REUSE_ENABLED: '1',
      NODE_OPTIONS: '--enable-source-maps --stack-trace-limit=1000',
    },
  },
  layers: {
    calulator: {
      path: 'calculator-layer',
      name: '${sls:stage}-cal-layer',
      compatibleRuntimes: ['nodejs16.x'],
      compatibleArchitectures: ['x86_64'],
      description: 'A hello lambda layer for reusing calculate function across lambdas',
      package: {
        include: ['../nodejs/**']
      }
    }
  },
  // import the function via paths
  functions: {
    name: hello,
    layers: 'arn:aws:lambda:eu-west-2:xxxx:layer:dev-cal-layer:1' 
  },
  package: { individually: true },
  custom: {
    esbuild: {
      bundle: true,
      minify: false,
      sourcemap: true,
      exclude: ['aws-sdk'],
      target: 'node14',
      define: { 'require.resolve': undefined },
      platform: 'node',
      concurrency: 10,
    },
  },
};

module.exports = serverlessConfiguration;
